# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'java-app'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az group create --name petclinic-rg --location westus2
      az appservice plan create --name petclinicPlan --resource-group petclinic-rg --sku FREE
      az webapp create --name petclinic-webapplication --resource-group petclinic-rg --plan petclinicPlan
      az webapp config set --name petclinic-webapplication --resource-group petclinic-rg --java-version 1.8 --java-container Tomcat --java-container-version 8.0

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'java-app'
    appType: 'webApp'
    WebAppName: 'petclinic-webapplication'
    packageForLinux: '$(build.artifactstagingdirectory)/**/*.war'
